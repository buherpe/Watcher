<controls:MetroWindow x:Class="Watcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:watcher="clr-namespace:Watcher"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="{Binding AppNameWithVersion}"
        Height="700" Width="1000"
        WindowState="{Binding WindowState}"
        mah:DialogParticipation.Register="{Binding}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Content="About" Command="{Binding AboutCommand}"/>
            <!--<Button>
                <StackPanel Orientation="Horizontal">
                    --><!--<iconPacks:PackIconModern Width="24" Height="24" Kind="FoodCupcake" />--><!--
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="deploy cupcakes" />
                </StackPanel>
            </Button>-->
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Window.DataContext>
        <watcher:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--<CollectionViewSource Source="{Binding Changes}" x:Key="GridItems">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Id" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->
    </Window.Resources>
    <Grid>
        <Button Command="{Binding AddWatcherCommand}" Content="Add watcher" HorizontalAlignment="Left" Margin="10,138,0,0" VerticalAlignment="Top" Width="111"/>
        <ScrollViewer Height="133" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Watchers}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="watcher:ChangeWatcher">
                        <Grid>
                            <Rectangle Stroke="White" Fill="LightGray">
                                <!--<Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="LightGray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Id}" Value="2">
                                            <Setter Property="Fill" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>-->
                            </Rectangle>
                            <StackPanel Margin="1">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Id}" />
                                    <Button Grid.Column="1" Content="x" Command="{Binding DeleteCommand}" Width="20"/>
                                </Grid>
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Path: "/>
                                    <TextBox Grid.Column="1"
                                             controls:TextBoxHelper.Watermark="e.g. C:\">
                                        <TextBox.Text>
                                            <Binding Path="Path" UpdateSourceTrigger="PropertyChanged"
                                                     ValidatesOnDataErrors="True"
                                                     NotifyOnValidationError="True">
                                                <!--<Binding.ValidationRules>
                                                    <ExceptionValidationRule />
                                                </Binding.ValidationRules>-->
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Filter: "/>
                                    <TextBox Grid.Column="1" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.Watermark="e.g. *.txt" />
                                </Grid>
                                <CheckBox Content="Include subdirectories" IsChecked="{Binding IncludeSubdirectories, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Enable raising events" IsChecked="{Binding EnableRaisingEvents, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <DataGrid ItemsSource="{Binding ChangeData}" Margin="0,170,0,43" AutoGenerateColumns="False" IsReadOnly="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Sorting">
                    <i:InvokeCommandAction Command="{Binding SortingCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Resources>
                <DataTemplate x:Key="ChangeTypeTemplate" DataType="watcher:Change">
                    <TextBlock Text="{Binding ChangeType}" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <!--<Setter Property="Background" Value="White"/>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Created">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Changed">
                                        <Setter Property="Background" Value="LightYellow"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Renamed">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Deleted">
                                        <Setter Property="Background" Value="LightPink"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Error">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </DataGrid.Resources>

            <!--<DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding }">

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>-->

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" CanUserSort="False"/>
                <DataGridTextColumn Header="Date time" Binding="{Binding DateTime}" CanUserSort="False"/>
                <DataGridTextColumn Header="Watcher" Binding="{Binding WatcherId}" CanUserSort="False"/>
                <DataGridTemplateColumn Header="Type" CellTemplate="{StaticResource ChangeTypeTemplate}" SortMemberPath="ChangeType" CanUserSort="False"/>
                <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" CanUserSort="False" Width="300"/>
                <DataGridTextColumn Header="Old path" Binding="{Binding OldFullPath}" CanUserSort="False" Width="300"/>
            </DataGrid.Columns>

            <!--<DataGrid.VerticalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.AppWorkspaceColorKey}}"/>
            </DataGrid.VerticalGridLinesBrush>
            <DataGrid.HorizontalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </DataGrid.HorizontalGridLinesBrush>-->
        </DataGrid>
        <StackPanel Orientation="Horizontal" Height="28" VerticalAlignment="Bottom" Margin="10,0,10,10" >
            <RepeatButton Command="{Binding PageParameters.PreviousPageCommand}" Content="|←" HorizontalAlignment="Left" VerticalAlignment="Top" Width="35"/>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Margin="5,5,5,0">
                <Run Text="Page"/>
                <Run Text="{Binding PageParameters.CurrentPage, Mode=OneWay}"/>
                <Run Text="of"/>
                <Run Text="{Binding PageParameters.PageCount, Mode=OneWay}"/>
                <Run Text="("/><Run Text="{Binding PageParameters.PageSize, Mode=OneWay}"/>
                <Run Text="items per page)"/>
            </TextBlock>
            <RepeatButton Command="{Binding PageParameters.NextPageCommand}" Content="→|" HorizontalAlignment="Left" VerticalAlignment="Top" Width="35"/>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Margin="5,5,0,0">
                <Run Text="Entities:"/>
                <Run Text="{Binding PageParameters.TotalCount, Mode=OneWay}"/>
            </TextBlock>
        </StackPanel>
        <TextBox HorizontalAlignment="Right" Height="23" Margin="0,138,10,0" TextWrapping="Wrap" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="270" 
                 controls:TextBoxHelper.Watermark="Search" controls:TextBoxHelper.ClearTextButton="True"/>

        <!--<StatusBar Margin="0,632,0,0" >
            <StatusBarItem>
                <Button Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Width="20"
                               Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource RevealButtonIcon}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </StatusBarItem>
            <StatusBarItem>MahApps.Metro DEMO Application</StatusBarItem>
            <Separator />
            <StatusBarItem>Selected Tab:</StatusBarItem>
            <StatusBarItem Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>-->
    </Grid>
</controls:MetroWindow>