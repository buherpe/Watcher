<Window x:Class="Watcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:watcher="clr-namespace:Watcher"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="{Binding Version, StringFormat='Watcher v{0}'}"
        Height="450" Width="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <watcher:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--<CollectionViewSource Source="{Binding Changes}" x:Key="GridItems">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Id" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->
    </Window.Resources>
    <Grid>
        <Button Command="{Binding AddWatcherCommand}" Content="Add watcher" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="84"/>
        <ScrollViewer Margin="0,35,0,0" Height="114" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Watchers}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="watcher:ChangeWatcher">
                        <Grid>
                            <Rectangle Stroke="White" Fill="LightGray">
                                <!--<Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="LightGray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Id}" Value="2">
                                            <Setter Property="Fill" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>-->
                            </Rectangle>
                            <StackPanel Margin="1">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Id}" />
                                    <Button Grid.Column="1" Content="x" Command="{Binding DeleteCommand}" Width="20"/>
                                </Grid>
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Path: "/>
                                    <watcher:CustomTextBox Grid.Column="1" Placeholder="e.g. C:\">
                                        <watcher:CustomTextBox.Text>
                                            <Binding Path="Path" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <DataErrorValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </watcher:CustomTextBox.Text>
                                    </watcher:CustomTextBox>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Filter: "/>
                                    <watcher:CustomTextBox Grid.Column="1" Placeholder="e.g. *.txt" Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                                <CheckBox Content="Include subdirectories" IsChecked="{Binding IncludeSubdirectories, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Enable raising events" IsChecked="{Binding EnableRaisingEvents, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <DataGrid ItemsSource="{Binding Changes}" Margin="0,149,0,0" AutoGenerateColumns="False" IsReadOnly="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Sorting">
                    <i:InvokeCommandAction Command="{Binding SortingCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Resources>
                <DataTemplate x:Key="ChangeTypeTemplate" DataType="watcher:Change">
                    <TextBlock Text="{Binding ChangeType}" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <!--<Setter Property="Background" Value="White"/>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Created">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Changed">
                                        <Setter Property="Background" Value="LightYellow"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Renamed">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Deleted">
                                        <Setter Property="Background" Value="LightPink"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Error">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                <DataGridTextColumn Header="Date time" Binding="{Binding DateTime}"/>
                <DataGridTextColumn Header="Watcher id" Binding="{Binding WatcherId}"/>
                <DataGridTemplateColumn Header="Change type" CellTemplate="{StaticResource ChangeTypeTemplate}" SortMemberPath="ChangeType" CanUserSort="True"/>
                <DataGridTextColumn Header="Full path" Binding="{Binding FullPath}"/>
                <DataGridTextColumn Header="Old full path" Binding="{Binding OldFullPath}"/>
            </DataGrid.Columns>

            <DataGrid.VerticalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.AppWorkspaceColorKey}}"/>
            </DataGrid.VerticalGridLinesBrush>
            <DataGrid.HorizontalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </DataGrid.HorizontalGridLinesBrush>
        </DataGrid>
    </Grid>
</Window>