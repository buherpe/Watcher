<controls:MetroWindow x:Class="Watcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:watcher="clr-namespace:Watcher"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="{Binding AppNameWithVersion}"
        Height="700" Width="1000"
        WindowState="{Binding WindowState}"
        mah:DialogParticipation.Register="{Binding}"
        Icon="Resources/binoculars.ico"
        WindowTransitionsEnabled="False"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <!--<Button Background="Transparent" Padding="4">
                <StackPanel Orientation="Horizontal">
                    --><!--<iconPacks:PackIconModern Width="24" Height="24" Kind="FoodCupcake" />--><!--
                    <Viewbox>
                        <Path
                            Data="F1 M 2.88,17.2725C 0.959991,15.3475 0,12.95 0,10.08C 0,7.21002 0.959991,4.8125 2.88,2.88751C 4.80002,0.962494 7.19125,0 10.0537,0C 12.9163,0 15.3163,0.962494 17.2538,2.88751C 19.1913,4.8125 20.16,7.21002 20.16,10.08C 20.16,12.95 19.1913,15.3475 17.2538,17.2725C 15.3163,19.1975 12.9163,20.16 10.0537,20.16C 7.19125,20.16 4.80002,19.1975 2.88,17.2725 Z M 3.84,11.3625L 8.81998,11.3625L 8.81998,16.32L 11.34,16.32L 11.34,11.3625L 16.32,11.3625L 16.32,8.85001L 11.34,8.85001L 11.34,3.84L 8.81998,3.84L 8.81998,8.85001L 3.84,8.85001L 3.84,11.3625 Z "
                            Fill="White"
                            Stretch="UniformToFill" />
                    </Viewbox>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="deploy cupcakes" />
                </StackPanel>
            </Button>-->
            <Button Command="{Binding UpdatedCommand}" Background="Transparent" Padding="4" ToolTip="Click to restart" Visibility="{Binding Updated, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <Viewbox Margin="2">
                        <Path Data="M15.667,0.001C7.028,0.001,0,7.029,0,15.667c0,8.639,7.028,15.666,15.667,15.666c8.64,0,15.667-7.027,15.667-15.666
		C31.334,7.029,24.307,0.001,15.667,0.001z M23.047,18.095l-7.381,7.381l-7.379-7.379c-0.781-0.781-0.781-2.046,0-2.828
		c0.78-0.781,2.048-0.781,2.828,0l2.552,2.551V8.687c0-1.104,0.896-2,2-2c1.104,0,2,0.896,2,2v9.13l2.552-2.551
		c0.78-0.781,2.049-0.781,2.828,0C23.828,16.047,23.828,17.313,23.047,18.095z"
                                Fill="White"/>
                    </Viewbox>
                    <!--<TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Update ready" />-->
                </StackPanel>
            </Button>
            <Button Content="About" Command="{Binding AboutCommand}"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Window.DataContext>
        <watcher:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Clean/Clean.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->
        <!--<CollectionViewSource Source="{Binding Changes}" x:Key="GridItems">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Id" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->
    </Window.Resources>
    <Grid>
        <Button Command="{Binding AddWatcherCommand}" Content="Add watcher" HorizontalAlignment="Left" Margin="10,138,0,0" VerticalAlignment="Top" Width="111"/>
        <ScrollViewer Height="133" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Watchers}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="watcher:ChangeWatcher">
                        <Grid>
                            <Rectangle Stroke="White" Fill="LightGray">
                                <!--<Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="LightGray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Id}" Value="2">
                                            <Setter Property="Fill" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>-->
                            </Rectangle>
                            <StackPanel Margin="1">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Id}" />
                                    <Button Grid.Column="1" Content="x" Command="{Binding DeleteCommand}" Width="20"/>
                                </Grid>
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Path: "/>
                                    <TextBox Grid.Column="1"
                                             controls:TextBoxHelper.Watermark="e.g. C:\">
                                        <TextBox.Text>
                                            <Binding Path="Path" UpdateSourceTrigger="PropertyChanged"
                                                     ValidatesOnDataErrors="True"
                                                     NotifyOnValidationError="True">
                                                <!--<Binding.ValidationRules>
                                                    <ExceptionValidationRule />
                                                </Binding.ValidationRules>-->
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Filter: "/>
                                    <TextBox Grid.Column="1" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.Watermark="e.g. *.txt" />
                                </Grid>
                                <CheckBox Content="Include subdirectories" IsChecked="{Binding IncludeSubdirectories, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Enable raising events" IsChecked="{Binding EnableRaisingEvents, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <DataGrid ItemsSource="{Binding ChangeData}" Margin="0,170,0,43" AutoGenerateColumns="False" IsReadOnly="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Sorting">
                    <i:InvokeCommandAction Command="{Binding SortingCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Resources>
                <DataTemplate x:Key="ChangeTypeTemplate" DataType="watcher:Change">
                    <TextBlock Text="{Binding ChangeType}" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <!--<Setter Property="Background" Value="White"/>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Created">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Changed">
                                        <Setter Property="Background" Value="LightYellow"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Renamed">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Deleted">
                                        <Setter Property="Background" Value="LightPink"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeType}" Value="Error">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </DataGrid.Resources>

            <!--<DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding }">

                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>-->

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" CanUserSort="False"/>
                <DataGridTextColumn Header="Date time" Binding="{Binding DateTime}" CanUserSort="False"/>
                <DataGridTextColumn Header="Watcher" Binding="{Binding WatcherId}" CanUserSort="False"/>
                <DataGridTemplateColumn Header="Type" CellTemplate="{StaticResource ChangeTypeTemplate}" SortMemberPath="ChangeType" CanUserSort="False"/>
                <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" CanUserSort="False" Width="300"/>
                <DataGridTextColumn Header="Old path" Binding="{Binding OldFullPath}" CanUserSort="False" Width="300"/>
            </DataGrid.Columns>

            <!--<DataGrid.VerticalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.AppWorkspaceColorKey}}"/>
            </DataGrid.VerticalGridLinesBrush>
            <DataGrid.HorizontalGridLinesBrush>
                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </DataGrid.HorizontalGridLinesBrush>-->
        </DataGrid>
        <StackPanel Orientation="Horizontal" Height="28" VerticalAlignment="Bottom" Margin="10,0,10,10" >
            <RepeatButton Command="{Binding PageParameters.PreviousPageCommand}" Content="|←" HorizontalAlignment="Left" VerticalAlignment="Top" Width="35"/>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Margin="5,5,5,0">
                <Run Text="Page"/>
                <Run Text="{Binding PageParameters.CurrentPage, Mode=OneWay}"/>
                <Run Text="of"/>
                <Run Text="{Binding PageParameters.PageCount, Mode=OneWay}"/>
                <Run Text="("/><Run Text="{Binding PageParameters.PageSize, Mode=OneWay}"/>
                <Run Text="items per page)"/>
            </TextBlock>
            <RepeatButton Command="{Binding PageParameters.NextPageCommand}" Content="→|" HorizontalAlignment="Left" VerticalAlignment="Top" Width="35"/>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Margin="5,5,0,0">
                <Run Text="Entities:"/>
                <Run Text="{Binding PageParameters.TotalCount, Mode=OneWay}"/>
            </TextBlock>
        </StackPanel>
        <TextBox HorizontalAlignment="Right" Height="23" Margin="0,138,10,0" TextWrapping="Wrap" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="270" 
                 controls:TextBoxHelper.Watermark="Search" controls:TextBoxHelper.ClearTextButton="True"/>

        <!--<StatusBar Margin="0,632,0,0" >
            <StatusBarItem>
                <Button Style="{DynamicResource MetroCircleButtonStyle}">
                    <Rectangle Width="20"
                               Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource RevealButtonIcon}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </StatusBarItem>
            <StatusBarItem>MahApps.Metro DEMO Application</StatusBarItem>
            <Separator />
            <StatusBarItem>Selected Tab:</StatusBarItem>
            <StatusBarItem Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>-->
    </Grid>
</controls:MetroWindow>